generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(uuid())
  name             String
  email            String?    @unique
  username         String?    @unique
  avatar           String?
  starredTemplates Template[] @relation("StarredBy")
  createdTemplates Template[] @relation("CreatedBy")
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}

model Template {
  id          String   @id @default(uuid())
  name        String // Name of the template
  description String // Description of the template
  guidelines  String? // Guidelines for the template (optional)
  repo        GitRepo? @relation(fields: [repoId], references: [id])
  repoId      Int? // Foreign key for the repository
  createdBy   User     @relation("CreatedBy", fields: [createdById], references: [id])
  createdById String // Foreign key for the user who created the template
  starredBy   User[]   @relation("StarredBy")
  starCount   Int      @default(0) // Number of users who starred the template
  skills      Skill[] // Implicit many-to-many relationship
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Skill {
  id        String     @id @default(cuid())
  name      String
  tagValue  String     @unique
  imageUrl  String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  templates Template[]
}

model GitRepo {
  id              Int        @id @default(autoincrement())
  name            String
  description     String?
  htmlUrl         String
  topics          String[]
  cloneUrl        String
  language        String?
  stargazersCount Int
  owner           Owner      @relation(fields: [ownerId], references: [login])
  ownerId         String
  defaultBranch   String
  updatedAt       DateTime   @updatedAt
  size            Int
  license         String?
  forksCount      Int
  Template        Template[]
}

model Owner {
  id         Int       @id @default(autoincrement())
  login      String    @unique
  avatarUrl  String
  profileUrl String
  GitRepo    GitRepo[]
}
